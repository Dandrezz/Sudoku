{"version":3,"sources":["App.js","index.js"],"names":["App","useState","matrixA","setMatrixRes","resolverMatrix","matrixB","matrixC","matrix","i","Array","fill","j","k","Math","floor","tmp","includes","push","length","llenarMatrix","className","map","row","indexRow","col","indexCol","parseInt","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAgGeA,MA7Ff,WAAgB,IAAD,EAEmBC,mBAAS,CACvC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAXd,mBAENC,EAFM,KAEGC,EAFH,KAsDPC,EAAiB,YAxCF,WAGnB,IAFA,IAAIC,EAAU,GAAIC,EAAU,GACxBC,EAAM,YAAOL,GACRM,EAAI,EAAGA,EAAI,EAAGA,IACrBH,EAAQG,GAAK,IAAIC,MAAM,GAAGC,KAAK,GAC/BJ,EAAQE,GAAK,IAAIC,MAAM,GAAGC,KAAK,GAEjC,IAAK,IAAIF,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IACrBN,EAAQG,GAAGG,GAAMJ,EAAOI,GAAGH,GAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBN,EAAQE,GAAO,EAAJG,EAAQC,GAAML,EAA2B,EAApBM,KAAKC,MAAMN,EAAI,GAASG,GAAIH,EAAI,EAAK,EAAII,GAK/E,IADA,IAAIG,EAAM,GACDP,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAkB,IAAfJ,EAAOC,GAAGG,GAAO,CAClB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACjBL,EAAOC,GAAGQ,SAASJ,IAAOP,EAAQM,GAAGK,SAASJ,IAAON,EAAwB,EAAhBO,KAAKC,MAAMN,EAAE,GAAKK,KAAKC,MAAMH,EAAE,IAAIK,SAASJ,IAC5GG,EAAIE,KAAKL,GAGG,IAAbG,EAAIG,SACLX,EAAOC,GAAGG,GAAGI,EAAI,GACjBV,EAAQM,GAAGH,GAAGO,EAAI,GAClBT,EAAwB,EAAhBO,KAAKC,MAAMN,EAAE,GAAKK,KAAKC,MAAMH,EAAE,IAAKH,EAAE,EAAG,EAAEG,EAAE,GAAGI,EAAI,IAE9DA,EAAM,GAIZZ,EAAa,YAAII,IAIjBY,IAGF,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,SAAd,oBACA,uBACEA,UAAU,qBADZ,SAGE,gCACGlB,EAAQmB,KAAI,SAACC,EAAKC,GAAN,OACX,6BACGD,EAAID,KAAI,SAACG,EAAKC,GAAN,OACP,oBACEL,UAAS,UACPM,UAAmC,EAAzBA,SAASH,EAAW,GAASE,GAAY,GACjD,IACF,EAFA,gBAFJ,SAUW,IAARD,EAAYA,EAAM,IAFdC,OAVFF,UAmBf,wBACEH,UAAU,oBACVO,QAAS,kBAAKvB,KAFhB,+BCnFNwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c84f9e8d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n\n  const [matrixA, setMatrixRes] = useState([\n    [0, 0, 3, 0, 4, 0, 0, 6, 7],\n    [0, 0, 4, 0, 0, 8, 2, 0, 0],\n    [0, 9, 6, 0, 0, 0, 3, 8, 0],\n    [5, 0, 7, 8, 0, 0, 9, 0, 2],\n    [0, 0, 9, 0, 0, 5, 4, 3, 0],\n    [3, 0, 0, 0, 0, 0, 6, 0, 0],\n    [0, 0, 0, 0, 0, 4, 0, 0, 0],\n    [4, 3, 2, 0, 7, 0, 0, 0, 0],\n    [0, 8, 0, 0, 2, 0, 5, 4, 0], \n  ])\n  \n  const llenarMatrix = () => {\n    let matrixB = [], matrixC = [];\n    let matrix = [...matrixA];\n    for (let i = 0; i < 9; i++) {\n      matrixB[i] = new Array(9).fill(0);\n      matrixC[i] = new Array(9).fill(0);\n    }\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        matrixB[i][j] = (matrix[j][i]);\n      }\n    }\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 3; j++) {\n        for (let k = 0; k < 3; k++) {\n          matrixC[i][j * 3 + k] = (matrix[Math.floor(i / 3) * 3 + j][(i % 3) * 3 + k]);\n        }\n      }\n    }\n    let tmp = [];\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if(matrix[i][j]===0){\n          for (let k = 1; k < 10; k++) {\n            if( !matrix[i].includes(k) && !matrixB[j].includes(k) && !matrixC[Math.floor(i/3)*3+Math.floor(j/3)].includes(k) ){\n              tmp.push(k)\n            }\n          }\n          if(tmp.length===1){\n            matrix[i][j]=tmp[0];\n            matrixB[j][i]=tmp[0];\n            matrixC[Math.floor(i/3)*3+Math.floor(j/3)][(i%3)*3+j%3]=tmp[0];\n          }\n          tmp = [];\n        }        \n      }      \n    }\n    setMatrixRes([...matrix]);\n  }\n\n  const resolverMatrix = () => {\n    llenarMatrix()\n  }\n\n  return (\n    <div className=\"App top-3\">\n      <h1 className=\"center\">Sudoku</h1>\n      <table \n        className=\"matrix-table top-3\"\n      >\n        <tbody>\n          {matrixA.map((row, indexRow) => (\n            <tr key={indexRow}>\n              {row.map((col, indexCol) => (\n                <th\n                  className={`${\n                    parseInt((parseInt(indexRow / 3) * 3 + indexCol) / 3) %\n                      2 ===\n                    1\n                      ? `light`\n                      : `dark`\n                  }`}\n                  key={indexCol}\n                >\n                  {col !== 0 ? col : \"\"}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button\n        className=\"centrar-btn top-3\"\n        onClick={()=>(resolverMatrix())}\n      >Llenar Sudoku</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}